/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/clockscreen_screen/clockScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "BitmapDatabase.hpp"

clockScreenViewBase::clockScreenViewBase() :
    buttonCallback(this, &clockScreenViewBase::buttonCallbackHandler)
{
    CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    boxBackground.setPosition(0, 0, 800, 480);
    boxBackground.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    textClock.setXY(310, 204);
    textClock.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textClock.setLinespacing(0);
    Unicode::snprintf(textClockBuffer1, TEXTCLOCKBUFFER1_SIZE, "%s", TypedText(T_SINGLEUSEID9).getText());
    textClock.setWildcard1(textClockBuffer1);
    Unicode::snprintf(textClockBuffer2, TEXTCLOCKBUFFER2_SIZE, "%s", TypedText(T_SINGLEUSEID10).getText());
    textClock.setWildcard2(textClockBuffer2);
    textClock.resizeToCurrentText();
    textClock.setTypedText(TypedText(T_SINGLEUSEID8));

    circleClock.setPosition(300, 140, 200, 200);
    circleClock.setCenter(100, 100);
    circleClock.setRadius(92);
    circleClock.setLineWidth(6);
    circleClock.setArc(0, 360);
    circleClock.setCapPrecision(90);
    circleClockPainter.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    circleClock.setPainter(circleClockPainter);

    btnSwitchScreen.setXY(315, 369);
    btnSwitchScreen.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID), Bitmap(BITMAP_BLUE_ICONS_SETTINGS_48_ID), Bitmap(BITMAP_BLUE_ICONS_SETTINGS_48_ID));
    btnSwitchScreen.setIconXY(62, 7);
    btnSwitchScreen.setAction(buttonCallback);

    add(boxBackground);
    add(textClock);
    add(circleClock);
    add(btnSwitchScreen);
}

void clockScreenViewBase::setupScreen()
{

}

void clockScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btnSwitchScreen)
    {
        //changeToSettingScreen
        //When btnSwitchScreen clicked change screen to settingScreen
        //Go to settingScreen with screen transition towards South
        application().gotosettingScreenScreenSlideTransitionSouth();
    }
}
