/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CLOCKSCREEN_VIEW_BASE_HPP
#define CLOCKSCREEN_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/clockscreen_screen/clockScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/canvas/Circle.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>

class clockScreenViewBase : public touchgfx::View<clockScreenPresenter>
{
public:
    clockScreenViewBase();
    virtual ~clockScreenViewBase() {}

    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box boxBackground;
    touchgfx::TextAreaWithTwoWildcards textClock;
    touchgfx::Circle circleClock;
    touchgfx::PainterRGB565 circleClockPainter;
    touchgfx::ButtonWithIcon btnSwitchScreen;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTCLOCKBUFFER1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textClockBuffer1[TEXTCLOCKBUFFER1_SIZE];
    static const uint16_t TEXTCLOCKBUFFER2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textClockBuffer2[TEXTCLOCKBUFFER2_SIZE];

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<clockScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // CLOCKSCREEN_VIEW_BASE_HPP
